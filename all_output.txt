The core classes, functions, and methods necessary for the game are:

1. `Game`: This class will represent the game itself. It will have methods to start the game, end the game, and update the game state.
2. `Snake`: This class will represent the snake. It will have methods to move the snake, grow the snake, and check if the snake has collided with itself or the edge of the board.
3. `Fruit`: This class will represent the fruit. It will have a method to place the fruit at a random location on the board.
4. `Board`: This class will represent the game board. It will have methods to draw the board and update the board state.

Now, let's write the code for each of these classes.

snake.py
```python
class Snake:
    def __init__(self):
        self.length = 1
        self.direction = "right"
        self.body = [(10, 10)]

    def move(self):
        head = self.body[0]
        if self.direction == "right":
            new_head = (head[0], head[1] + 1)
        elif self.direction == "left":
            new_head = (head[0], head[1] - 1)
        elif self.direction == "up":
            new_head = (head[0] - 1, head[1])
        elif self.direction == "down":
            new_head = (head[0] + 1, head[1])
        self.body.insert(0, new_head)
        if len(self.body) > self.length:
            self.body.pop()

    def grow(self):
        self.length += 1

    def collided_with_self(self):
        return len(self.body) != len(set(self.body))

    def collided_with_edge(self, board_size):
        head = self.body[0]
        return head[0] < 0 or head[1] < 0 or head[0] >= board_size or head[1] >= board_size
```

fruit.py
```python
import random

class Fruit:
    def __init__(self, board_size):
        self.position = self.random_position(board_size)

    def random_position(self, board_size):
        return (random.randint(0, board_size - 1), random.randint(0, board_size - 1))
```

board.py
```python
class Board:
    def __init__(self, size, snake, fruit):
        self.size = size
        self.snake = snake
        self.fruit = fruit

    def draw(self):
        for i in range(self.size):
            for j in range(self.size):
                if (i, j) in self.snake.body:
                    print("S", end="")
                elif (i, j) == self.fruit.position:
                    print("F", end="")
                else:
                    print(".", end="")
            print()

    def update(self):
        self.snake.move()
        if self.snake.body[0] == self.fruit.position:
            self.snake.grow()
            self.fruit = Fruit(self.size)
```

game.py
```python
from snake import Snake
from fruit import Fruit
from board import Board

class Game:
    def __init__(self, board_size):
        self.snake = Snake()
        self.fruit = Fruit(board_size)
        self.board = Board(board_size, self.snake, self.fruit)
        self.score = 0

    def start(self):
        while True:
            self.board.draw()
            self.board.update()
            if self.snake.collided_with_self() or self.snake.collided_with_edge(self.board.size):
                break
            if self.snake.body[0] == self.fruit.position:
                self.score += 1
        print("Game over! Your score was: ", self.score)

    def end(self):
        print("Thanks for playing!")

if __name__ == "__main__":
    game = Game(20)
    game.start()
    game.end()
```

requirements.txt
```txt
python==3.8.5
```

This game is a simple text-based snake game. The game board is a 20x20 grid represented by dots. The snake is represented by "S" and the fruit is represented by "F". The snake moves in a constant direction until the player changes it. If the snake collides with itself or the edge of the board, the game ends. If the snake eats a fruit, it grows in length and the player's score increases.
Assumptions:

1. The library management system will have basic functionalities such as adding a new book, issuing a book, returning a book, and searching for a book.
2. The system will be a console-based application.
3. The system will not have any user roles. Any user can perform any operation.
4. The system will not persist data. Once the application is closed, all data will be lost.
5. The system will not handle any concurrency issues. It is assumed that only one user will use the system at a time.
6. The system will not handle any exceptions. It is assumed that the user will always provide valid input.

Core classes, functions, and methods:

1. `Book`: This class will represent a book in the library. It will have fields such as `id`, `title`, `author`, and `isIssued`.
2. `Library`: This class will represent the library. It will have a list of books and methods to add a book, issue a book, return a book, and search for a book.
3. `Main`: This class will be the entry point of the application. It will have the `main` method which will interact with the user and perform operations based on the user's input.

Now, let's write the code for each class.

book.java
```java
public class Book {
    private int id;
    private String title;
    private String author;
    private boolean isIssued;

    public Book(int id, String title, String author) {
        this.id = id;
        this.title = title;
        this.author = author;
        this.isIssued = false;
    }

    public int getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public boolean isIssued() {
        return isIssued;
    }

    public void issue() {
        this.isIssued = true;
    }

    public void returnBook() {
        this.isIssued = false;
    }
}
```

library.java
```java
import java.util.ArrayList;
import java.util.List;

public class Library {
    private List<Book> books;

    public Library() {
        this.books = new ArrayList<>();
    }

    public void addBook(Book book) {
        books.add(book);
    }

    public Book issueBook(int id) {
        for (Book book : books) {
            if (book.getId() == id && !book.isIssued()) {
                book.issue();
                return book;
            }
        }
        return null;
    }

    public void returnBook(int id) {
        for (Book book : books) {
            if (book.getId() == id && book.isIssued()) {
                book.returnBook();
            }
        }
    }

    public Book searchBook(int id) {
        for (Book book : books) {
            if (book.getId() == id) {
                return book;
            }
        }
        return null;
    }
}
```

main.java
```java
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Library library = new Library();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("1. Add book");
            System.out.println("2. Issue book");
            System.out.println("3. Return book");
            System.out.println("4. Search book");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter book id: ");
                    int id = scanner.nextInt();
                    System.out.print("Enter book title: ");
                    String title = scanner.next();
                    System.out.print("Enter book author: ");
                    String author = scanner.next();
                    library.addBook(new Book(id, title, author));
                    break;
                case 2:
                    System.out.print("Enter book id: ");
                    id = scanner.nextInt();
                    Book issuedBook = library.issueBook(id);
                    if (issuedBook != null) {
                        System.out.println("Book issued: " + issuedBook.getTitle());
                    } else {
                        System.out.println("Book not available");
                    }
                    break;
                case 3:
                    System.out.print("Enter book id: ");
                    id = scanner.nextInt();
                    library.returnBook(id);
                    break;
                case 4:
                    System.out.print("Enter book id: ");
                    id = scanner.nextInt();
                    Book searchedBook = library.searchBook(id);
                    if (searchedBook != null) {
                        System.out.println("Book found: " + searchedBook.getTitle());
                    } else {
                        System.out.println("Book not found");
                    }
                    break;
                case 5:
                    System.exit(0);
                default:
                    System.out.println("Invalid choice");
            }
        }
    }
}
```
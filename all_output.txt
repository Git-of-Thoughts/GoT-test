Based on the assumptions, we will need the following files:

1. `index.html`: This is the main HTML file that will contain the structure of the web app.
2. `styles.css`: This CSS file will contain all the styles for the web app.
3. `app.js`: This JavaScript file will contain all the logic for the web app.

Let's start with the `index.html` file:

index.html
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <h1>Todo List</h1>
    <form id="todo-form">
        <input type="text" id="todo-input" placeholder="Enter a new task">
        <button type="submit">Add</button>
    </form>
    <ul id="todo-list"></ul>
    <script src="app.js"></script>
</body>
</html>
```

Next, we have the `styles.css` file:

styles.css
```css
body {
    font-family: Arial, sans-serif;
}

#todo-form {
    margin-bottom: 1em;
}

#todo-input {
    margin-right: 1em;
}

#todo-list {
    list-style-type: none;
    padding-left: 0;
}

.todo-item {
    margin-bottom: 0.5em;
}

.todo-item button {
    margin-left: 1em;
}
```

Finally, we have the `app.js` file:

app.js
```javascript
document.addEventListener('DOMContentLoaded', function() {
    var todoForm = document.getElementById('todo-form');
    var todoList = document.getElementById('todo-list');
    var todoInput = document.getElementById('todo-input');

    todoForm.addEventListener('submit', function(event) {
        event.preventDefault();
        var newTodo = todoInput.value;
        if (newTodo) {
            var newListItem = document.createElement('li');
            newListItem.textContent = newTodo;
            newListItem.className = 'todo-item';
            var deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.addEventListener('click', function() {
                todoList.removeChild(newListItem);
            });
            newListItem.appendChild(deleteButton);
            todoList.appendChild(newListItem);
            todoInput.value = '';
        }
    });
});
```

This code creates a simple Todo List web app. The user can add new tasks, which are displayed in a list. Each task has a delete button next to it, which removes the task from the list when clicked. All data is stored locally and will be lost when the page is refreshed.
Based on the assumptions and requirements, we will create a simple Python application for managing a To-Do list. The application will have the following core classes and functions:

1. `Todo` class: This class will represent a single To-Do item. It will have properties like `title`, `description`, and `status`.

2. `TodoList` class: This class will represent a list of To-Do items. It will have methods to add a new To-Do, remove a To-Do, and list all To-Dos.

3. `main.py` file: This will be the entry point of the application. It will handle user input and output.

Now, let's write the code for each file.

`todo.py`
```python
from dataclasses import dataclass

@dataclass
class Todo:
    title: str
    description: str
    status: str
```

`todolist.py`
```python
class TodoList:
    def __init__(self):
        self.todos = []

    def add(self, todo):
        self.todos.append(todo)

    def remove(self, title):
        self.todos = [todo for todo in self.todos if todo.title != title]

    def list_all(self):
        return self.todos
```

`main.py`
```python
from todo import Todo
from todolist import TodoList

def main():
    todo_list = TodoList()

    while True:
        print("1. Add a new To-Do")
        print("2. Remove a To-Do")
        print("3. List all To-Dos")
        print("4. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            title = input("Enter the title of the To-Do: ")
            description = input("Enter the description of the To-Do: ")
            status = input("Enter the status of the To-Do: ")

            todo = Todo(title, description, status)
            todo_list.add(todo)

        elif choice == "2":
            title = input("Enter the title of the To-Do to remove: ")
            todo_list.remove(title)

        elif choice == "3":
            todos = todo_list.list_all()

            for todo in todos:
                print(f"Title: {todo.title}, Description: {todo.description}, Status: {todo.status}")

        elif choice == "4":
            break

if __name__ == "__main__":
    main()
```

`requirements.txt`
```
dataclasses
```

This application allows the user to add new To-Dos, remove existing To-Dos, and list all To-Dos. The `Todo` class represents a single To-Do item, and the `TodoList` class manages a list of To-Dos. The `main.py` file is the entry point of the application, which handles user input and output. The `requirements.txt` file lists the dependencies of the application.
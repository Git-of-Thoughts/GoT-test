The core classes, functions, and methods necessary for the snake game are:

1. `Game` class: This class will handle the game logic.
    - `__init__`: Initializes the game.
    - `reset`: Resets the game.
    - `play`: Starts the game.
    - `get_input`: Gets user input.
    - `update`: Updates the game state.
    - `draw`: Draws the game state.
    - `check_collision`: Checks for collisions.
    - `spawn_food`: Spawns food in the game.

2. `Snake` class: This class will represent the snake.
    - `__init__`: Initializes the snake.
    - `move`: Moves the snake.
    - `grow`: Grows the snake.
    - `collides_with`: Checks if the snake collides with a given position.

3. `Food` class: This class will represent the food.
    - `__init__`: Initializes the food.

4. `Position` class: This class will represent a position in the game.
    - `__init__`: Initializes the position.
    - `__eq__`: Checks if two positions are equal.

Now, let's write the code for each class and function.

game.py
```python
import random
from snake import Snake
from food import Food
from position import Position

class Game:
    def __init__(self, width, height):
        self.width = width
        self.height = height
        self.reset()

    def reset(self):
        self.snake = Snake()
        self.food = Food(self.spawn_food())
        self.score = 0
        self.game_over = False

    def play(self):
        while not self.game_over:
            self.get_input()
            self.update()
            self.draw()

    def get_input(self):
        direction = input("Enter direction (w/a/s/d): ")
        self.snake.set_direction(direction)

    def update(self):
        if self.snake.move() == self.food.position:
            self.snake.grow()
            self.score += 1
            self.food = Food(self.spawn_food())
        elif self.check_collision():
            self.game_over = True

    def draw(self):
        for i in range(self.height):
            for j in range(self.width):
                if Position(j, i) == self.snake.head:
                    print("S", end="")
                elif Position(j, i) in self.snake.body:
                    print("s", end="")
                elif Position(j, i) == self.food.position:
                    print("F", end="")
                else:
                    print(".", end="")
            print()
        print(f"Score: {self.score}")

    def check_collision(self):
        return (self.snake.head in self.snake.body[1:] or
                not (0 <= self.snake.head.x < self.width and
                     0 <= self.snake.head.y < self.height))

    def spawn_food(self):
        while True:
            position = Position(random.randint(0, self.width - 1),
                                random.randint(0, self.height - 1))
            if position not in self.snake.body:
                return position
```

snake.py
```python
from position import Position

class Snake:
    DIRECTIONS = {"w": Position(0, -1), "a": Position(-1, 0),
                  "s": Position(0, 1), "d": Position(1, 0)}

    def __init__(self):
        self.head = Position(0, 0)
        self.body = [self.head]
        self.direction = self.DIRECTIONS["d"]

    def set_direction(self, direction):
        if direction in self.DIRECTIONS:
            self.direction = self.DIRECTIONS[direction]

    def move(self):
        self.head = self.head + self.direction
        self.body.insert(0, self.head)
        return self.body.pop()

    def grow(self):
        self.body.append(self.body[-1])
```

food.py
```python
class Food:
    def __init__(self, position):
        self.position = position
```

position.py
```python
class Position:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __eq__(self, other):
        return self.x == other.x and self.y == other.y

    def __add__(self, other):
        return Position(self.x + other.x, self.y + other.y)
```

main.py
```python
from game import Game

def main():
    game = Game(10, 10)
    game.play()

if __name__ == "__main__":
    main()
```

requirements.txt
```
python==3.8.5
```

To run the game, you would need to run the `main.py` file.
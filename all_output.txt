The core classes and functions for the snake game will be:

1. `Game`: This class will handle the game logic. It will have methods to start the game, handle user input, update the game state, and check for game over conditions.
2. `Snake`: This class will represent the snake. It will have methods to move the snake, grow the snake, and check if the snake has collided with itself.
3. `Food`: This class will represent the food. It will have a method to place the food at a random location on the game board.
4. `Board`: This class will represent the game board. It will have methods to draw the board, the snake, and the food.

Now, let's write the code for each of these classes.

snake.py
```python
class Snake:
    def __init__(self):
        self.positions = [(5, 5)]
        self.direction = 'UP'

    def move(self):
        head = self.get_head_position()
        if self.direction == 'UP':
            self.positions.insert(0, (head[0], head[1] - 1))
        elif self.direction == 'DOWN':
            self.positions.insert(0, (head[0], head[1] + 1))
        elif self.direction == 'LEFT':
            self.positions.insert(0, (head[0] - 1, head[1]))
        elif self.direction == 'RIGHT':
            self.positions.insert(0, (head[0] + 1, head[1]))
        self.positions.pop()

    def grow(self):
        tail = self.positions[-1]
        if self.direction == 'UP':
            self.positions.append((tail[0], tail[1] - 1))
        elif self.direction == 'DOWN':
            self.positions.append((tail[0], tail[1] + 1))
        elif self.direction == 'LEFT':
            self.positions.append((tail[0] - 1, tail[1]))
        elif self.direction == 'RIGHT':
            self.positions.append((tail[0] + 1, tail[1]))

    def get_head_position(self):
        return self.positions[0]

    def collide_with_self(self):
        return self.get_head_position() in self.positions[1:]
```

food.py
```python
import random

class Food:
    def __init__(self, board_width, board_height):
        self.position = (random.randint(0, board_width - 1), random.randint(0, board_height - 1))

    def reset_position(self):
        self.position = (random.randint(0, board_width - 1), random.randint(0, board_height - 1))
```

board.py
```python
class Board:
    def __init__(self, width, height, snake, food):
        self.width = width
        self.height = height
        self.snake = snake
        self.food = food

    def draw(self):
        for i in range(self.height):
            for j in range(self.width):
                if (j, i) in self.snake.positions:
                    print('S', end='')
                elif (j, i) == self.food.position:
                    print('F', end='')
                else:
                    print('.', end='')
            print()
```

game.py
```python
import os
import time
import keyboard

from snake import Snake
from food import Food
from board import Board

class Game:
    def __init__(self, board_width, board_height):
        self.snake = Snake()
        self.food = Food(board_width, board_height)
        self.board = Board(board_width, board_height, self.snake, self.food)

    def start(self):
        while True:
            os.system('cls' if os.name == 'nt' else 'clear')
            self.board.draw()
            if self.game_over():
                break
            self.update()
            time.sleep(0.2)

    def update(self):
        if keyboard.is_pressed('up'):
            self.snake.direction = 'UP'
        elif keyboard.is_pressed('down'):
            self.snake.direction = 'DOWN'
        elif keyboard.is_pressed('left'):
            self.snake.direction = 'LEFT'
        elif keyboard.is_pressed('right'):
            self.snake.direction = 'RIGHT'
        self.snake.move()
        if self.snake.get_head_position() == self.food.position:
            self.snake.grow()
            self.food.reset_position()

    def game_over(self):
        x, y = self.snake.get_head_position()
        return x < 0 or y < 0 or x >= self.board.width or y >= self.board.height or self.snake.collide_with_self()
```

main.py
```python
from game import Game

if __name__ == '__main__':
    game = Game(20, 20)
    game.start()
```

requirements.txt
```
keyboard==0.13.5
```

Please note that the game uses the `keyboard` library to handle keyboard input. You can install it using `pip install -r requirements.txt`.
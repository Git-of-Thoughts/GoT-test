Understood. Here are the core classes, functions, and methods that will be necessary for the snake game:

1. `Game` class: This class will represent the game itself. It will contain the game loop and handle user input.
   - `__init__` method: Initializes the game.
   - `run` method: Starts the game loop.
   - `handle_input` method: Handles user input.
   - `update` method: Updates the game state.
   - `draw` method: Draws the game state to the console.

2. `Snake` class: This class will represent the snake.
   - `__init__` method: Initializes the snake.
   - `move` method: Moves the snake in the current direction.
   - `grow` method: Increases the size of the snake.
   - `collides_with_self` method: Checks if the snake has collided with itself.

3. `Food` class: This class will represent the food.
   - `__init__` method: Initializes the food.
   - `respawn` method: Moves the food to a new random location.

Now, let's write the code for each of these classes and functions.

snake.py
```python
class Snake:
    def __init__(self):
        self.length = 1
        self.direction = 'right'
        self.body = [(10, 10)]

    def move(self):
        head = self.body[0]
        if self.direction == 'right':
            new_head = (head[0], head[1] + 1)
        elif self.direction == 'left':
            new_head = (head[0], head[1] - 1)
        elif self.direction == 'up':
            new_head = (head[0] - 1, head[1])
        elif self.direction == 'down':
            new_head = (head[0] + 1, head[1])
        self.body.insert(0, new_head)
        if len(self.body) > self.length:
            self.body.pop()

    def grow(self):
        self.length += 1

    def collides_with_self(self):
        return self.body[0] in self.body[1:]
```

food.py
```python
import random

class Food:
    def __init__(self):
        self.position = (random.randint(0, 19), random.randint(0, 19))

    def respawn(self):
        self.position = (random.randint(0, 19), random.randint(0, 19))
```

game.py
```python
import os
import time
import msvcrt
from snake import Snake
from food import Food

class Game:
    def __init__(self):
        self.snake = Snake()
        self.food = Food()
        self.score = 0

    def run(self):
        while True:
            self.handle_input()
            self.update()
            self.draw()
            time.sleep(0.1)

    def handle_input(self):
        if msvcrt.kbhit():
            key = msvcrt.getch().decode('utf-8').lower()
            if key == 'w' and self.snake.direction != 'down':
                self.snake.direction = 'up'
            elif key == 'a' and self.snake.direction != 'right':
                self.snake.direction = 'left'
            elif key == 's' and self.snake.direction != 'up':
                self.snake.direction = 'down'
            elif key == 'd' and self.snake.direction != 'left':
                self.snake.direction = 'right'

    def update(self):
        self.snake.move()
        if self.snake.body[0] == self.food.position:
            self.snake.grow()
            self.score += 1
            self.food.respawn()
        if self.snake.collides_with_self() or not (0 <= self.snake.body[0][0] < 20 and 0 <= self.snake.body[0][1] < 20):
            print('Game Over! Your score is: ', self.score)
            exit()

    def draw(self):
        os.system('cls')
        for i in range(20):
            for j in range(20):
                if (i, j) in self.snake.body:
                    print('S', end='')
                elif (i, j) == self.food.position:
                    print('F', end='')
                else:
                    print('.', end='')
            print()

if __name__ == '__main__':
    game = Game()
    game.run()
```

requirements.txt
```txt
msvcrt==1.0
```

Please note that this game is designed to run on Windows due to the use of `msvcrt` for non-blocking keyboard input and `cls` to clear the console. If you're on a different platform, you'll need to replace these with equivalent functions.
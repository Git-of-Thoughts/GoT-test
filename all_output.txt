Based on the requirements and assumptions, we will need the following classes and functions:

1. `Game`: This class will be the main class that controls the game loop, events, and rendering.
2. `Snake`: This class will represent the snake. It will have methods to move the snake, grow the snake, and check for collisions.
3. `Food`: This class will represent the food that the snake eats. It will have methods to place the food at a random location on the screen.
4. `main`: This function will be the entry point of the program. It will create an instance of the `Game` class and start the game loop.

Now, let's write the code for each file.

`main.py`
```python
import pygame
from game import Game

def main():
    pygame.init()
    game = Game()
    game.run()
    pygame.quit()

if __name__ == "__main__":
    main()
```

`game.py`
```python
import pygame
from snake import Snake
from food import Food

class Game:
    def __init__(self):
        self.screen = pygame.display.set_mode((800, 600))
        self.snake = Snake()
        self.food = Food()

    def run(self):
        clock = pygame.time.Clock()
        while True:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    return
            self.snake.update()
            if self.snake.collides_with(self.food):
                self.snake.grow()
                self.food = Food()
            self.screen.fill((0, 0, 0))
            self.snake.draw(self.screen)
            self.food.draw(self.screen)
            pygame.display.flip()
            clock.tick(60)
```

`snake.py`
```python
import pygame

class Snake:
    def __init__(self):
        self.body = [(100, 100), (90, 100), (80, 100)]
        self.direction = (10, 0)

    def update(self):
        head = self.body[0]
        new_head = (head[0] + self.direction[0], head[1] + self.direction[1])
        self.body.insert(0, new_head)
        self.body.pop()

    def grow(self):
        self.body.append(None)

    def collides_with(self, other):
        return self.body[0] == other.position

    def draw(self, surface):
        for part in self.body:
            pygame.draw.rect(surface, (255, 255, 255), pygame.Rect(part[0], part[1], 10, 10))
```

`food.py`
```python
import pygame
import random

class Food:
    def __init__(self):
        self.position = (random.randint(0, 79) * 10, random.randint(0, 59) * 10)

    def draw(self, surface):
        pygame.draw.rect(surface, (255, 0, 0), pygame.Rect(self.position[0], self.position[1], 10, 10))
```

Finally, we need to create a `requirements.txt` file to specify the dependencies:

`requirements.txt`
```plaintext
pygame==2.0.1
```

To run the game, you would first install the dependencies with `pip install -r requirements.txt`, and then run the `main.py` script.
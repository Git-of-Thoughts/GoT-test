The core classes and functions necessary for this game are:

1. `Game` class: This class will handle the game logic, including the game loop, user input, and game over conditions.
2. `Snake` class: This class will represent the snake. It will have methods to move the snake, grow the snake, and check if the snake has collided with itself.
3. `Food` class: This class will represent the food. It will have a method to place the food at a random location within the game area.
4. `Point` class: This class will represent a point in the 2D game area. It will be used to represent the position of the snake and the food.

Now, let's write the code for each of these classes.

snake_game.py
```python
import random
from snake import Snake
from food import Food
from point import Point

class Game:
    def __init__(self, width, height):
        self.width = width
        self.height = height
        self.snake = Snake(Point(width // 2, height // 2))
        self.food = Food(width, height)

    def game_loop(self):
        while True:
            self.snake.move()
            if self.snake.head == self.food.position:
                self.snake.grow()
                self.food = Food(self.width, self.height)
            elif (self.snake.head.x < 0 or self.snake.head.y < 0 or
                  self.snake.head.x >= self.width or self.snake.head.y >= self.height or
                  self.snake.head in self.snake.body[1:]):
                break

if __name__ == "__main__":
    game = Game(20, 20)
    game.game_loop()
```

snake.py
```python
from point import Point

class Snake:
    def __init__(self, initial_position):
        self.body = [initial_position]
        self.direction = Point(0, 1)

    @property
    def head(self):
        return self.body[0]

    def move(self):
        self.body.insert(0, self.body[0] + self.direction)
        self.body.pop()

    def grow(self):
        self.body.insert(0, self.body[0] + self.direction)

    def change_direction(self, new_direction):
        if (new_direction.x * self.direction.x + new_direction.y * self.direction.y) == 0:
            self.direction = new_direction
```

food.py
```python
import random
from point import Point

class Food:
    def __init__(self, width, height):
        self.position = Point(random.randint(0, width - 1), random.randint(0, height - 1))
```

point.py
```python
class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __eq__(self, other):
        return self.x == other.x and self.y == other.y

    def __add__(self, other):
        return Point(self.x + other.x, self.y + other.y)
```

Please note that this is a very basic version of the snake game and does not handle user input. You would need to use a library like curses to handle user input and update the console in real time.
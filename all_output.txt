The core classes, functions, and methods necessary for the snake game are:

1. `Game` class: This class will handle the game logic, including the game loop, user input, and game over condition.
2. `Snake` class: This class will represent the snake, including its current position and direction, and methods to move and grow the snake.
3. `Apple` class: This class will represent the apple, including its current position and a method to place a new apple on the game board.
4. `Board` class: This class will represent the game board, including methods to draw the board and check for collisions.

Now, let's implement these classes in Python.

game.py
```python
from board import Board
from snake import Snake
from apple import Apple

class Game:
    def __init__(self, board_size):
        self.board = Board(board_size)
        self.snake = Snake()
        self.apple = Apple(self.board)

    def play(self):
        while True:
            self.board.draw(self.snake, self.apple)
            direction = input("Enter direction (up, down, left, right): ")
            self.snake.move(direction)
            if self.board.check_collision(self.snake):
                print("Game over!")
                break
            if self.snake.head == self.apple.position:
                self.snake.grow()
                self.apple.place_new()

if __name__ == "__main__":
    game = Game(10)
    game.play()
```

board.py
```python
class Board:
    def __init__(self, size):
        self.size = size

    def draw(self, snake, apple):
        for i in range(self.size):
            for j in range(self.size):
                if (i, j) in snake.body:
                    print("S", end="")
                elif (i, j) == apple.position:
                    print("A", end="")
                else:
                    print(".", end="")
            print()

    def check_collision(self, snake):
        if snake.head in snake.body[1:] or \
           not (0 <= snake.head[0] < self.size and 0 <= snake.head[1] < self.size):
            return True
        return False
```

snake.py
```python
class Snake:
    def __init__(self):
        self.body = [(0, 0)]
        self.directions = {"up": (-1, 0), "down": (1, 0), "left": (0, -1), "right": (0, 1)}

    @property
    def head(self):
        return self.body[0]

    def move(self, direction):
        new_head = (self.head[0] + self.directions[direction][0],
                    self.head[1] + self.directions[direction][1])
        self.body.insert(0, new_head)
        self.body.pop()

    def grow(self):
        self.body.insert(0, self.body[0])
```

apple.py
```python
import random

class Apple:
    def __init__(self, board):
        self.board = board
        self.place_new()

    def place_new(self):
        while True:
            position = (random.randint(0, self.board.size - 1),
                        random.randint(0, self.board.size - 1))
            if position not in self.board.snake.body:
                self.position = position
                break
```

requirements.txt
```
# No external dependencies
```

This code should be saved in four separate files: game.py, board.py, snake.py, and apple.py. The game can be started by running the game.py file. The game will continue until the snake hits the wall or its own body, at which point a "Game over!" message will be printed and the game will end.
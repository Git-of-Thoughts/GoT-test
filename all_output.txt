Given the complexity of the task, we will use Python with the Kivy framework for developing the mobile application. Kivy is a Python library for rapid development of applications that make use of innovative user interfaces, such as multi-touch apps.

The core classes and methods necessary for this application are:

1. `PopCatGame`: This is the main class for the game. It will handle the game logic such as counting taps, managing the timer, and updating the score.

2. `CountryRanking`: This class will handle the ranking of countries. It will keep track of the total score for each country and provide a method to get the current rankings.

3. `Player`: This class will represent a player. It will store the player's score and country.

4. `main.py`: This is the entry point of the application. It will create an instance of `PopCatGame` and start the game.

5. `requirements.txt`: This file will list all the Python dependencies required to run the application.

Now, let's write the code for each file.

main.py
```python
from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.button import Button
from kivy.clock import Clock
from player import Player
from country_ranking import CountryRanking

class PopCatGame(BoxLayout):
    def __init__(self, **kwargs):
        super(PopCatGame, self).__init__(**kwargs)
        self.orientation = 'vertical'
        self.player = Player('USA')  # Assume the player is from USA
        self.country_ranking = CountryRanking()
        self.score_label = Label(text='Score: 0')
        self.add_widget(self.score_label)
        self.popcat_button = Button(text='PopCat')
        self.popcat_button.bind(on_press=self.on_button_press)
        self.add_widget(self.popcat_button)
        Clock.schedule_interval(self.update, 1.0)

    def on_button_press(self, instance):
        self.player.score += 1
        self.country_ranking.add_score(self.player.country, 1)

    def update(self, dt):
        self.score_label.text = 'Score: ' + str(self.player.score)

class PopCatApp(App):
    def build(self):
        return PopCatGame()

if __name__ == '__main__':
    PopCatApp().run()
```

player.py
```python
class Player:
    def __init__(self, country):
        self.country = country
        self.score = 0
```

country_ranking.py
```python
from collections import defaultdict

class CountryRanking:
    def __init__(self):
        self.scores = defaultdict(int)

    def add_score(self, country, score):
        self.scores[country] += score

    def get_ranking(self):
        return sorted(self.scores.items(), key=lambda x: x[1], reverse=True)
```

requirements.txt
```
kivy==2.0.0
```

Please note that this is a very basic implementation of the game. There are many features and improvements that could be added, such as a more sophisticated UI, the ability for the player to choose their country, a leaderboard showing the top countries, etc.
The core classes, functions, and methods necessary for this game are:

1. `Game` class: This class will handle the game logic, including the game loop, user input, and game over conditions.
2. `Snake` class: This class will represent the snake. It will have methods to move the snake, grow the snake, and check if the snake has collided with itself.
3. `Food` class: This class will represent the food. It will have a method to place the food in a random location within the game area.
4. `Point` class: This class will represent a point in the 2D game area. It will be used to represent the position of the snake and the food.
5. `Direction` enum: This enum will represent the possible directions that the snake can move in.

Now, let's write the code for each of these components.

`point.py`
```python
class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
```

`direction.py`
```python
from enum import Enum

class Direction(Enum):
    UP = 1
    DOWN = 2
    LEFT = 3
    RIGHT = 4
```

`snake.py`
```python
from direction import Direction
from point import Point

class Snake:
    def __init__(self, initial_position):
        self.body = [initial_position]
        self.direction = Direction.RIGHT

    def move(self):
        head = self.get_head()
        if self.direction == Direction.UP:
            self.body.insert(0, Point(head.x, head.y - 1))
        elif self.direction == Direction.DOWN:
            self.body.insert(0, Point(head.x, head.y + 1))
        elif self.direction == Direction.LEFT:
            self.body.insert(0, Point(head.x - 1, head.y))
        elif self.direction == Direction.RIGHT:
            self.body.insert(0, Point(head.x + 1, head.y))
        self.body.pop()

    def grow(self):
        tail = self.body[-1]
        self.body.append(Point(tail.x, tail.y))

    def get_head(self):
        return self.body[0]

    def collided_with_self(self):
        return self.get_head() in self.body[1:]
```

`food.py`
```python
import random
from point import Point

class Food:
    def __init__(self, game_width, game_height):
        self.position = Point(random.randint(0, game_width - 1), random.randint(0, game_height - 1))
```

`game.py`
```python
import curses
from direction import Direction
from snake import Snake
from food import Food
from point import Point

class Game:
    def __init__(self, game_width, game_height):
        self.game_width = game_width
        self.game_height = game_height
        self.snake = Snake(Point(game_width // 2, game_height // 2))
        self.food = Food(game_width, game_height)
        self.score = 0

    def game_loop(self, window):
        while True:
            self.snake.move()
            if self.snake.get_head() == self.food.position:
                self.snake.grow()
                self.score += 1
                self.food = Food(self.game_width, self.game_height)
            elif (self.snake.get_head().x < 0 or self.snake.get_head().y < 0 or
                  self.snake.get_head().x >= self.game_width or self.snake.get_head().y >= self.game_height or
                  self.snake.collided_with_self()):
                break
            self.draw(window)

    def draw(self, window):
        window.clear()
        for part in self.snake.body:
            window.addch(part.y, part.x, '#')
        window.addch(self.food.position.y, self.food.position.x, '*')
        window.addstr(0, 0, 'Score: ' + str(self.score))

    def start(self):
        curses.wrapper(self.game_loop)
```

`main.py`
```python
from game import Game

if __name__ == '__main__':
    game = Game(20, 20)
    game.start()
```

To run the game, execute the `main.py` file. The game will start in a new terminal window. Use the arrow keys to control the snake. The game ends when the snake hits the wall or its own body. The score is displayed in the top left corner of the window.